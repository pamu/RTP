{"name":"Rtp","tagline":"reliable transfer protocol ","body":"\r\nThis project is done in \"Scala programming language\"\r\n\r\nlibrary used Akka IO \r\n\r\nAKKA IO is a asynchronous non-blocking IO library \r\n\r\nAKKA is a open source toolkit and runtime for simplifying building concurrent applications on JVM and AKKA io is the asynchronous IO library part of the akka toolkit\r\n\r\n1)Actor \r\n\r\nActor can be used for implementing FINITE STATE MACHINES\r\n\r\nActor is a object which can do three things\r\n1)communicate(send messages)\r\n2)store(have state)\r\n3)process(can execute code)\r\n\r\nUDP sender is an Actor \r\nUDP receiver is also an Actor\r\n\r\n\r\n\r\nThis Project has following files\r\n\r\npackage com.nagarjuna_pamu.data_sender\r\n\r\nReceiver.scala => Its an Actor which receives acks from the data receiver\r\n\r\nSender.scala => Its an Actor which sender data packets to the data receiver\r\n\r\npackage com.nagarjuna_pamu.data_receiver\r\n\r\nReceiver.scala => Its an actor which receives data packets from the data sender\r\n\r\nSender.scala => Its an Actor which sends ack packets to the data receiver\r\n\r\n\r\npackage com.nagarjuna_pamu\r\n\r\nMain.scala => Bootstrap program to start all the actors\r\n\r\nParams.scala => Contains all parameters such as window size, timeout time etc\r\n\r\nUtils.scala => Contains all methods for decoding , encoding packets and decoding , encoding packets .\r\n\r\nto execute the project you must have java installed \r\n\r\n1) in the project folder run \"./activator run\"\r\n\r\n2) or download sbt (simple build tool for scala) and in the project folder run \"sbt run\"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}